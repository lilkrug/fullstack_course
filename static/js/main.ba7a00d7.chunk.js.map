{"version":3,"sources":["helpers/AuthContext.js","pages/Home.js","pages/AddTour.js","pages/AddHotel.js","pages/ToursTable.js","pages/Tours.js","pages/Hotels.js","pages/BookingsTable.js","pages/AddBooking.js","pages/UsersTable.js","pages/HotelsTable.js","pages/Registration.js","pages/Login.js","pages/PageNotFound.js","pages/PageForAdmin.js","pages/Profile.js","pages/ChangePassword.js","pages/Chat.js","App.js","reportWebVitals.js","index.js"],"names":["AuthContext","createContext","Home","_useState","useState","_useState2","_slicedToArray","listOfTours","setListOfTours","history","useContext","authState","useHistory","useEffect","localStorage","getItem","axios","get","headers","accessToken","then","response","status","Swal","fire","icon","title","text","confirmButtonColor","removeItem","push","undefined","data","error","catch","message","_jsx","className","children","map","tour","key","_jsxs","name","priceOneDay","Hotel","AddTour","hotels","setHotels","console","log","validationSchema","Yup","shape","required","hotelId","min","Formik","initialValues","onSubmit","post","errorMessage","Form","ErrorMessage","component","Field","autoComplete","id","placeholder","as","value","hotel","type","AddHotel","city","starRating","max","HotelsTable","_useState3","_useState4","listOfHotels","setListOfHotels","_useState5","_useState6","editingId","setEditingId","_useState7","_useState8","updatedValues","setUpdatedValues","_useState9","_useState10","setOriginalValues","_useState11","_useState12","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","stop","apply","arguments","handleCancelEdit","handleUpdate","_ref2","_callee2","_context2","Object","keys","length","abrupt","put","concat","t0","_x","handleInputChange","e","_e$target","target","trim","isNaN","_objectSpread","_defineProperty","handleDelete","_ref3","_callee3","_context3","delete","sent","_x2","item","onChange","_Fragment","onClick","values","Tours","searchTerm","setSearchTerm","filter","RegExp","test","Hotels","BookingsTable","listOfBookings","setListOfBookings","listOfUsers","setListOfUsers","_useState13","_useState14","numberOfDays","userId","user","username","User","tourId","Tour","AddBooking","tours","setTours","newData","UsersTable","Registration","password","Login","setUsername","setPassword","setAuthState","event","setItem","token","isAdmin","PageNotFound","counter","setCounter","timer","setTimeout","clearTimeout","PageForAdmin","Profile","useParams","ChangePassword","oldPassword","setOldPassword","newPassword","setNewPassword","Chat","setMessage","messages","setMessages","socketRef","useRef","messagesRef","scrollToBottom","current","scrollIntoView","behavior","io","transports","auth","on","prevMessages","_toConsumableArray","disconnect","style","height","width","overflowY","index","wordWrap","wordBreak","whiteSpace","author","ref","preventDefault","emit","alert","inputValue","App","isAuthenticated","AuthRoute","Component","rest","_objectWithoutProperties","_excluded","Route","render","props","Redirect","to","PrivateRoute","_excluded2","AdminRoute","_excluded3","RegistrationWithRouter","withRouter","LoginWithRouter","ChatWithRouter","HomeWithRouter","AddHotelWithRouter","AddBookingWithRouter","AddTourWithRouter","UsersTableWithRouter","BookingsTableWithRouter","ToursTableWithRouter","ToursTable","HotelsTableWithRouter","ToursWithRouter","HotelsWithRouter","ProfileWithRouter","ChangePasswordWithRouter","window","location","replace","Provider","Router","Link","Switch","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba7a00d7.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext(\"\");","import React, { useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../helpers/AuthContext\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Formik, Form } from \"formik\";\r\n\r\nfunction Home() {\r\n  const [listOfTours, setListOfTours] = useState([]);\r\n  const { authState } = useContext(AuthContext);\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!localStorage.getItem(\"accessToken\")) {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Неавторизованный',\r\n        text: 'Пользователь не авторизован!',\r\n        confirmButtonColor: '#fe6401',\r\n      }).then(() => {\r\n        localStorage.removeItem(\"accessToken\");\r\n        history.push(\"/login\");\r\n      });\r\n    } else {\r\n      axios\r\n        .get(\"https://course-project-75u9.onrender.com/tours\", {\r\n          headers: { accessToken: localStorage.getItem(\"accessToken\") },\r\n        })\r\n        .then((response) => {\r\n          if (response.status === 401) {\r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Неавторизованный',\r\n              text: 'Срок действия токена истек',\r\n              confirmButtonColor: '#fe6401',\r\n            }).then(() => {\r\n              localStorage.removeItem(\"accessToken\");\r\n              history.push(\"/login\");\r\n            });\r\n          } else if (response.data.error != undefined) {\r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Ошибка',\r\n              text: response.data.error,\r\n              confirmButtonColor: '#fe6401',\r\n            }).then(() => {\r\n              localStorage.removeItem(\"accessToken\");\r\n              history.push(\"/login\");\r\n            });\r\n          } else {\r\n            setListOfTours(response.data);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Произошла непредвиденная ошибка',\r\n            text: error.message,\r\n            confirmButtonColor: '#fe6401',\r\n          }).then(() => {\r\n            localStorage.removeItem(\"accessToken\");\r\n            history.push(\"/login\");\r\n          });\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"home-page\">\r\n      <div>\r\n        <div className=\"formContainer\">\r\n          {listOfTours.map((tour, key) => {\r\n            return (\r\n              <div key={key} className=\"tourItem\">\r\n                <h3>{tour.name}</h3>\r\n                <p>Цена за день: ${tour.priceOneDay}</p>\r\n                <p>Гостиница: {tour.Hotel.name}</p>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n\r\nfunction AddTour() {\r\n    const [hotels, setHotels] = useState([]);\r\n    let history = useHistory();\r\n    const initialValues = {\r\n        name: \"\",\r\n        priceOneDay: 100\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!localStorage.getItem(\"accessToken\")) {\r\n            history.push(\"/login\");\r\n        }\r\n        axios.get(\"https://course-project-75u9.onrender.com/hotels/\", {\r\n            headers: { accessToken: localStorage.getItem(\"accessToken\") },\r\n        }).then((response) => {\r\n            console.log(response.data)\r\n            setHotels(response.data);\r\n        });\r\n    }, []);\r\n    const validationSchema = Yup.object().shape({\r\n        name: Yup.string().required(\"Вы должны ввести название!\"),\r\n        hotelId: Yup.number().required(\"Необходимо выбрать отель\"),\r\n        priceOneDay: Yup.number().required(\"Выбрать цену\").min(1, \"Минимальное значение – 10.\"),\r\n    });\r\n\r\n    const onSubmit = (data) => {\r\n        console.log(data);\r\n        axios\r\n            .post(\"https://course-project-75u9.onrender.com/tours\", data, {\r\n                headers: { accessToken: localStorage.getItem(\"accessToken\") },\r\n            })\r\n            .then((response) => {\r\n                if (response.status === 200) {\r\n                    Swal.fire({\r\n                        icon: \"success\",\r\n                        title: \"Успех\",\r\n                        text: \"Тур успешно добавлен\",\r\n                    }).then(() => {\r\n                        history.push(\"/\");\r\n                    });\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                const errorMessage = error.response.data.error;\r\n                console.log(error)\r\n                if (error.response.status === 400) {\r\n                    Swal.fire({\r\n                        icon: \"error\",\r\n                        title: \"Ошибка\",\r\n                        text: errorMessage,\r\n                    });\r\n                } else if (error.response.status === 409) {\r\n                    Swal.fire({\r\n                        icon: \"error\",\r\n                        title: \"Ошибка\",\r\n                        text: errorMessage,\r\n                    });\r\n                }\r\n                else if (error.response.status === 404) {\r\n                    Swal.fire({\r\n                        icon: \"error\",\r\n                        title: \"Ошибка\",\r\n                        text: errorMessage,\r\n                    });\r\n                } else {\r\n                    Swal.fire({\r\n                        icon: \"error\",\r\n                        title: \"Ошибка\",\r\n                        text: \"Не удалось создать тур.\",\r\n                    });\r\n                }\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"createPostPage\">\r\n            <Formik\r\n                initialValues={initialValues}\r\n                onSubmit={onSubmit}\r\n                validationSchema={validationSchema}\r\n            >\r\n                <Form className=\"formContainer\">\r\n                    <label>Название тура: </label>\r\n                    <ErrorMessage name=\"name\" component=\"span\" />\r\n                    <Field\r\n                        autoComplete=\"off\"\r\n                        id=\"inputCreatePost\"\r\n                        name=\"name\"\r\n                        placeholder=\"Египет\"\r\n                    />\r\n                    <label>Отель: </label>\r\n                    <ErrorMessage name=\"hotelId\" component=\"span\" />\r\n                    <Field as=\"select\" name=\"hotelId\">\r\n                        <option value=\"\">Выберите отель</option>\r\n                        {hotels.map((hotel) => (\r\n                            <option key={hotel.id} value={hotel.id}>\r\n                                {hotel.name}\r\n                            </option>\r\n                        ))}\r\n                    </Field>\r\n                    <label>Цена в день: </label>\r\n                    <ErrorMessage name=\"priceOneDay\" component=\"span\" />\r\n                    <Field\r\n                        type=\"number\"\r\n                        id=\"inputCreatePost\"\r\n                        name=\"priceOneDay\"\r\n                        placeholder=\"100\"\r\n                    />\r\n                    <button type=\"submit\"> Добавить тур</button>\r\n                </Form>\r\n            </Formik>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddTour;","import React, { useEffect, useState } from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n\r\nfunction AddHotel() {\r\n    let history = useHistory();\r\n    const initialValues = {\r\n        name: \"\",\r\n        city: \"\",\r\n        starRating: 1\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!localStorage.getItem(\"accessToken\")) {\r\n            history.push(\"/login\");\r\n        }\r\n    }, []);\r\n    const validationSchema = Yup.object().shape({\r\n        name: Yup.string().required(\"Вы должны ввести название!\"),\r\n        city: Yup.string().required(\"Вы должны ввести город!\"),\r\n        starRating: Yup.number().required(\"Необходимо выбрать звезду\").min(1, \"Минимальное значение – 1.\").max(5, \"Максимальное значение - 5\"),\r\n    });\r\n\r\n    const onSubmit = (data) => {\r\n        console.log(data);\r\n        axios\r\n            .post(\"https://course-project-75u9.onrender.com/hotels\", data, {\r\n                headers: { accessToken: localStorage.getItem(\"accessToken\") },\r\n            })\r\n            .then((response) => {\r\n                const errorMessage = response.data.error;\r\n                if (response.status === 200) {\r\n                    Swal.fire({\r\n                      icon: \"success\",\r\n                      title: \"Успех\",\r\n                      text: \"Отель успешно добавлен\",\r\n                    }).then(() => {\r\n                      history.push(\"/\");\r\n                    });\r\n                  }\r\n            })\r\n            .catch((error) => {\r\n                const errorMessage = error.response.data.error;\r\n                console.log(error)\r\n                if (error.response.status === 400) {\r\n                    Swal.fire({\r\n                        icon: \"error\",\r\n                        title: \"Ошибка\",\r\n                        text: errorMessage,\r\n                    });\r\n                } else if (error.response.status === 409) {\r\n                    Swal.fire({\r\n                        icon: \"error\",\r\n                        title: \"Ошибка\",\r\n                        text: errorMessage,\r\n                    });\r\n                }\r\n                else if (error.response.status === 404) {\r\n                    Swal.fire({\r\n                        icon: \"error\",\r\n                        title: \"Ошибка\",\r\n                        text: errorMessage,\r\n                    });\r\n                } else {\r\n                    Swal.fire({\r\n                        icon: \"error\",\r\n                        title: \"Ошибка\",\r\n                        text: \"Не удалось создать отель\",\r\n                    });\r\n                }\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"createPostPage\">\r\n            <Formik\r\n                initialValues={initialValues}\r\n                onSubmit={onSubmit}\r\n                validationSchema={validationSchema}\r\n            >\r\n                <Form className=\"formContainer\">\r\n                    <label>Название: </label>\r\n                    <ErrorMessage name=\"name\" component=\"span\" />\r\n                    <Field\r\n                        autoComplete=\"off\"\r\n                        id=\"inputCreatePost\"\r\n                        name=\"name\"\r\n                        placeholder=\"(Столбцы)\"\r\n                    />\r\n                    <ErrorMessage name=\"city\" component=\"span\" />\r\n                    <Field\r\n                        autoComplete=\"off\"\r\n                        id=\"inputCreatePost\"\r\n                        name=\"city\"\r\n                        placeholder=\"(Столбцы)\"\r\n                    />\r\n                    <ErrorMessage name=\"starRating\" component=\"span\" />\r\n                    <Field as=\"select\" name=\"starRating\">\r\n                        <option value=\"\">Выберите звезды</option>\r\n                        <option value={1}>1</option>\r\n                        <option value={2}>2</option>\r\n                        <option value={3}>3</option>\r\n                        <option value={4}>4</option>\r\n                        <option value={5}>5</option>\r\n                    </Field>\r\n                    <button type=\"submit\"> Добавить Отель </button>\r\n                </Form>\r\n            </Formik>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddHotel;","import React, { useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Swal from 'sweetalert2';\r\nimport { AuthContext } from \"../helpers/AuthContext\";\r\n\r\nconst HotelsTable = () => {\r\n    const [listOfTours, setListOfTours] = useState([]);\r\n    const [listOfHotels, setListOfHotels] = useState([]);\r\n    const [editingId, setEditingId] = useState(null);\r\n    const [updatedValues, setUpdatedValues] = useState({});\r\n    const [originalValues, setOriginalValues] = useState({});\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const { authState } = useContext(AuthContext);\r\n\r\n    let history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (!localStorage.getItem(\"accessToken\")) {\r\n            console.log(localStorage.getItem(\"accessToken\"))\r\n            history.push(\"/login\");\r\n        } else {\r\n            fetchData()\r\n        }\r\n    }, []);\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            axios\r\n                .get(\"https://course-project-75u9.onrender.com/tours\", {\r\n                    headers: { accessToken: localStorage.getItem(\"accessToken\") }\r\n                })\r\n                .then((response) => {\r\n                    console.log(response.data.error != undefined)\r\n                    if (response.data.error != undefined) {\r\n                        history.push(\"/login\");\r\n                    }\r\n                    else {\r\n                        console.log(response.data)\r\n                        setListOfTours(response.data);\r\n                    }\r\n                });\r\n            axios\r\n                .get(\"https://course-project-75u9.onrender.com/hotels\", {\r\n                    headers: { accessToken: localStorage.getItem(\"accessToken\") }\r\n                })\r\n                .then((response) => {\r\n                    console.log(response.data.error != undefined)\r\n                    if (response.data.error != undefined) {\r\n                        history.push(\"/login\");\r\n                    }\r\n                    else {\r\n                        console.log(response.data)\r\n                        setListOfHotels(response.data);\r\n                    }\r\n                });\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    const handleEdit = (id, values) => {\r\n        setEditingId(id);\r\n        setUpdatedValues(values);\r\n        setOriginalValues(values);\r\n    };\r\n\r\n    const handleCancelEdit = () => {\r\n        setEditingId(null);\r\n        setUpdatedValues({});\r\n    };\r\n\r\n\r\n    const handleUpdate = async (id) => {\r\n        const fieldsUpdated = Object.keys(updatedValues).length > 0;\r\n\r\n        if (!fieldsUpdated) {\r\n            Swal.fire({\r\n                icon: \"info\",\r\n                title: \"Нет обновлений\",\r\n                text: \"Вы не сделали никаких обновлений.\",\r\n            });\r\n            return;\r\n        }\r\n        try {\r\n            await axios.put(`https://course-project-75u9.onrender.com/tours/edit/${id}`, updatedValues, {\r\n                headers: { accessToken: localStorage.getItem(\"accessToken\") }\r\n            });\r\n            Swal.fire({\r\n                icon: \"success\",\r\n                title: \"Успех\",\r\n                text: \"Тур успешно обновлен\",\r\n            });\r\n            setEditingId(null); // Завершение режима редактирования\r\n            fetchData(); // Обновление данных после обновления\r\n        } catch (error) {\r\n            console.error(error);\r\n            let errorMessage = \"Не удалось обновить отель.\";\r\n\r\n            if (error.response && error.response.status === 400) {\r\n                errorMessage = \"Отсутствующие параметры\";\r\n            } else if (error.response && error.response.status === 404) {\r\n                errorMessage = \"Тур не найден\";\r\n            } else if (error.response && error.response.status === 409) {\r\n                errorMessage = \"Название тура уже занято\";\r\n            } else if (error.response && error.response.data && error.response.data.error) {\r\n                errorMessage = error.response.data.error;\r\n            }\r\n\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Ошибка',\r\n                text: errorMessage,\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleInputChange = (e, id) => {\r\n        const { name, value } = e.target;\r\n        if (name === 'name' && value.trim() === '') {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Ошибка',\r\n                text: 'Имя не может быть пустым',\r\n            });\r\n            return;\r\n        }\r\n        if (name === \"priceOneDay\") {\r\n            if (value < 0 || isNaN(value)) {\r\n                // Вывод алерта при вводе недопустимого значения\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Ошибка',\r\n                    text: 'Значение должно быть неотрицательным числом',\r\n                });\r\n                return;\r\n            }\r\n        }\r\n\r\n        setUpdatedValues({ ...updatedValues, [name]: value });\r\n    };\r\n\r\n    const handleDelete = async (id) => {\r\n        try {\r\n            const response = await axios.delete(`https://course-project-75u9.onrender.com/tours/${id}`, {\r\n                headers: { accessToken: localStorage.getItem(\"accessToken\") },\r\n            });\r\n\r\n            if (response.status === 200) {\r\n                Swal.fire({\r\n                    icon: \"success\",\r\n                    title: \"Успех\",\r\n                    text: \"Тур успешно удален\",\r\n                });\r\n                fetchData();\r\n            } else {\r\n                Swal.fire({\r\n                    icon: \"error\",\r\n                    title: \"Ошибка\",\r\n                    text: \"Не удалось удалить тур\",\r\n                });\r\n            }\r\n        } catch (error) {\r\n            Swal.fire({\r\n                icon: \"error\",\r\n                title: \"Ошибка\",\r\n                text: \"Не удалось удалить тур\",\r\n            });\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>ID</th>\r\n                    <th>Имя</th>\r\n                    <th>Цена в день</th>\r\n                    <th>Отель</th>\r\n                    <th>Действия</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {listOfTours.map((item) => (\r\n                    <tr key={item.id}>\r\n                        <td>{item.id}</td>\r\n                        <td>\r\n                            {editingId === item.id ? (\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"name\"\r\n                                    value={updatedValues.name || item.name}\r\n                                    onChange={(e) => handleInputChange(e, item.id)}\r\n                                />\r\n                            ) : (\r\n                                item.name\r\n                            )}\r\n                        </td>\r\n                        <td>\r\n                            {editingId === item.id ? (\r\n                                <input\r\n                                    type=\"number\"\r\n                                    name=\"priceOneDay\"\r\n                                    min={1}\r\n                                    value={updatedValues.priceOneDay || item.priceOneDay}\r\n                                    onChange={(e) => handleInputChange(e, item.id)}\r\n                                />\r\n                            ) : (\r\n                                item.priceOneDay\r\n                            )}\r\n                        </td>\r\n                        <td>\r\n                            {editingId === item.id ? (\r\n                                <select\r\n                                    name=\"hotelId\"\r\n                                    value={updatedValues.hotelId || item.hotelId}\r\n                                    onChange={(e) => handleInputChange(e, item.id)}\r\n                                >\r\n                                    {listOfHotels.map((hotel) => (\r\n                                        <option key={hotel.id} value={hotel.id}>{hotel.name}</option>\r\n                                    ))}\r\n                                </select>\r\n                            ) : (\r\n                                item.Hotel.name\r\n                            )}\r\n                        </td>\r\n                        <td>\r\n                            {editingId === item.id ? (\r\n                                <>\r\n                                    <button onClick={() => handleUpdate(item.id)}>Обновить</button>\r\n                                    <button onClick={handleCancelEdit}>Отменить</button>\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    <button onClick={() => handleEdit(item.id, { id: item.id, name: item.name, priceOneDay: item.priceOneDay, hotelId: item.hotelId })}>Изменить</button>\r\n                                    <button onClick={() => handleDelete(item.id)}>Удалить</button>\r\n                                </>\r\n                            )}\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n\r\nexport default HotelsTable;","import React, { useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../helpers/AuthContext\";\r\n\r\n\r\n\r\nfunction Tours() {\r\n  const [listOfTours, setListOfTours] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const { authState } = useContext(AuthContext);\r\n\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!localStorage.getItem(\"accessToken\")) {\r\n      console.log(localStorage.getItem(\"accessToken\"))\r\n      history.push(\"/login\");\r\n    } else {\r\n      axios\r\n        .get(\"https://course-project-75u9.onrender.com/tours\", {\r\n          headers: { accessToken: localStorage.getItem(\"accessToken\") }\r\n        })\r\n        .then((response) => {\r\n          console.log(response.data.error != undefined)\r\n          if (response.data.error != undefined) {\r\n            history.push(\"/login\");\r\n          }\r\n          else {\r\n            setListOfTours(response.data);\r\n          }\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>{listOfTours.length > 0 ? (\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search by tour name...\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n        />\r\n        <table>\r\n          <tbody>\r\n            {listOfTours.filter((tour) => {\r\n              const regex = new RegExp(`^${searchTerm}`, \"i\");\r\n              return regex.test(tour.name);\r\n            })\r\n              .map((item) => (\r\n                <tr\r\n                  key={item.id}\r\n                  onClick={() => {\r\n                    history.push(`/tour/${item.id}`);\r\n                  }}\r\n                >\r\n                  <td>\r\n                    <h1>{item.name}</h1>\r\n                    <h2>{item.Hotel.name}</h2>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    ) :\r\n      (\r\n        <h1>Таких туров нет</h1>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tours;\r\n","import React, { useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../helpers/AuthContext\";\r\n\r\n\r\n\r\nfunction Hotels() {\r\n    const [listOfHotels, setListOfHotels] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const { authState } = useContext(AuthContext);\r\n\r\n    let history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (!localStorage.getItem(\"accessToken\")) {\r\n            console.log(localStorage.getItem(\"accessToken\"))\r\n            history.push(\"/login\");\r\n        } else {\r\n            axios\r\n                .get(\"https://course-project-75u9.onrender.com/hotels\", {\r\n                    headers: { accessToken: localStorage.getItem(\"accessToken\") }\r\n                })\r\n                .then((response) => {\r\n                    console.log(response.data.error != undefined)\r\n                    if (response.data.error != undefined) {\r\n                        history.push(\"/login\");\r\n                    }\r\n                    else {\r\n                        setListOfHotels(response.data);\r\n                    }\r\n                });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div>{listOfHotels.length > 0 ? (\r\n            <div>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search by hotel name...\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                />\r\n                <table>\r\n                    <tbody>\r\n                        {listOfHotels.filter((hotel) => {\r\n                            const regex = new RegExp(`^${searchTerm}`, \"i\");\r\n                            return regex.test(hotel.name);\r\n                        })\r\n                            .map((item) => (\r\n                                <tr\r\n                                    key={item.id}\r\n                                    onClick={() => {\r\n                                        history.push(`/tour/${item.id}`);\r\n                                    }}\r\n                                >\r\n                                    <td>\r\n                                        <h1>{item.name}</h1>\r\n                                        <h2>{item.city}</h2>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        ) :\r\n            (\r\n                <h1>Отелей нет</h1>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Hotels;\r\n","import React, { useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Swal from 'sweetalert2';\r\nimport { AuthContext } from \"../helpers/AuthContext\";\r\n\r\nconst BookingsTable = () => {\r\n    const [listOfBookings, setListOfBookings] = useState([]);\r\n    const [listOfUsers, setListOfUsers] = useState([]);\r\n    const [listOfTours, setListOfTours] = useState([]);\r\n    const [editingId, setEditingId] = useState(null);\r\n    const [updatedValues, setUpdatedValues] = useState({});\r\n    const [originalValues, setOriginalValues] = useState({});\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const { authState } = useContext(AuthContext);\r\n\r\n    let history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (!localStorage.getItem(\"accessToken\")) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            fetchData()\r\n        }\r\n    }, []);\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            axios\r\n                .get(\"https://course-project-75u9.onrender.com/bookings\", {\r\n                    headers: { accessToken: localStorage.getItem(\"accessToken\") }\r\n                })\r\n                .then((response) => {\r\n                    if (response.data.error != undefined) {\r\n                        history.push(\"/login\");\r\n                    }\r\n                    else {\r\n                        console.log('bookings')\r\n                        console.log(response.data)\r\n                        setListOfBookings(response.data);\r\n                    }\r\n                });\r\n            axios\r\n                .get(\"https://course-project-75u9.onrender.com/tours\", {\r\n                    headers: { accessToken: localStorage.getItem(\"accessToken\") }\r\n                })\r\n                .then((response) => {\r\n                    if (response.data.error != undefined) {\r\n                        history.push(\"/login\");\r\n                    }\r\n                    else {\r\n                        setListOfTours(response.data);\r\n                    }\r\n                });\r\n            axios\r\n                .get(\"https://course-project-75u9.onrender.com/auth/bookings\", {\r\n                    headers: { accessToken: localStorage.getItem(\"accessToken\") }\r\n                })\r\n                .then((response) => {\r\n                    if (response.data.error != undefined) {\r\n                        history.push(\"/login\");\r\n                    }\r\n                    else {\r\n                        setListOfUsers(response.data);\r\n                    }\r\n                });\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    const handleEdit = (id, values) => {\r\n        setEditingId(id);\r\n        setUpdatedValues(values);\r\n        setOriginalValues(values);\r\n    };\r\n\r\n    const handleCancelEdit = () => {\r\n        setEditingId(null);\r\n        setUpdatedValues({});\r\n    };\r\n\r\n\r\n    const handleUpdate = async (id) => {\r\n        const fieldsUpdated = Object.keys(updatedValues).length > 0;\r\n\r\n        if (!fieldsUpdated) {\r\n            Swal.fire({\r\n                icon: \"info\",\r\n                title: \"Нет обновления\",\r\n                text: \"Вы не сделали никаких обновлений.\",\r\n            });\r\n            return;\r\n        }\r\n        try {\r\n            await axios.put(`https://course-project-75u9.onrender.com/bookings/edit/${id}`, updatedValues, {\r\n                headers: { accessToken: localStorage.getItem(\"accessToken\") }\r\n            });\r\n            Swal.fire({\r\n                icon: \"success\",\r\n                title: \"Успех\",\r\n                text: \"Бронирование успешно обновлено\",\r\n            });\r\n            setEditingId(null); // Завершение режима редактирования\r\n            fetchData(); // Обновление данных после обновления\r\n        } catch (error) {\r\n            console.error(error);\r\n            let errorMessage = \"Не удалось обновить бронирование\";\r\n\r\n            if (error.response && error.response.status === 400) {\r\n                errorMessage = \"Отсутствующие параметры\";\r\n            } else if (error.response && error.response.status === 404) {\r\n                errorMessage = \"Бронирование не найдено\";\r\n            } else if (error.response && error.response.data && error.response.data.error) {\r\n                errorMessage = error.response.data.error;\r\n            }\r\n\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Ошибка',\r\n                text: errorMessage,\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleInputChange = (e, id) => {\r\n        const { name, value } = e.target;\r\n        if (name === \"numberOfDays\") {\r\n            if (value < 0 || isNaN(value)) {\r\n                // Вывод алерта при вводе недопустимого значения\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Ошибка',\r\n                    text: 'Значение должно быть неотрицательным числом',\r\n                });\r\n                return;\r\n            }\r\n        }\r\n\r\n        setUpdatedValues({ ...updatedValues, [name]: value });\r\n    };\r\n\r\n    const handleDelete = async (id) => {\r\n        try {\r\n            const response = await axios.delete(`https://course-project-75u9.onrender.com/bookings/${id}`, {\r\n                headers: { accessToken: localStorage.getItem(\"accessToken\") },\r\n            });\r\n\r\n            if (response.status === 200) {\r\n                Swal.fire({\r\n                    icon: \"success\",\r\n                    title: \"Успех\",\r\n                    text: \"Отель успешно удален\",\r\n                });\r\n                fetchData();\r\n            } else {\r\n                Swal.fire({\r\n                    icon: \"error\",\r\n                    title: \"Ошибка\",\r\n                    text: \"Не удалось удалить отель\",\r\n                });\r\n            }\r\n        } catch (error) {\r\n            Swal.fire({\r\n                icon: \"error\",\r\n                title: \"Ошибка\",\r\n                text: \"Не удалось удалить отель\",\r\n            });\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {listOfBookings === null ? (\r\n                <p>Нет бронирований</p>\r\n            ) : (\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Количество дней</th>\r\n                            <th>Имя покупателя</th>\r\n                            <th>Тур</th>\r\n                            <th>Действия</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {listOfBookings.map((item) => (\r\n                            <tr key={item.id}>\r\n                                <td>{item.id}</td>\r\n                                <td>\r\n                                    {editingId === item.id ? (\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            name=\"numberOfDays\"\r\n                                            value={updatedValues.numberOfDays || item.numberOfDays}\r\n                                            onChange={(e) => handleInputChange(e, item.id)}\r\n                                        />\r\n                                    ) : (\r\n                                        item.numberOfDays\r\n                                    )}\r\n                                </td>\r\n\r\n                                <td>\r\n                                    {editingId === item.id ? (\r\n                                        <select\r\n                                            name=\"userId\"\r\n                                            value={updatedValues.userId || item.userId}\r\n                                            onChange={(e) => handleInputChange(e, item.id)}\r\n                                        >\r\n                                            {listOfUsers.map((user) => (\r\n                                                <option key={user.id} value={user.id}>{user.username}</option>\r\n                                            ))}\r\n                                        </select>\r\n                                    ) : (\r\n                                        item.User.username\r\n                                    )}\r\n                                </td>\r\n                                <td>\r\n                                    {editingId === item.id ? (\r\n                                        <select\r\n                                            name=\"tourId\"\r\n                                            value={updatedValues.tourId || item.tourId}\r\n                                            onChange={(e) => handleInputChange(e, item.id)}\r\n                                        >\r\n                                            {listOfTours.map((tour) => (\r\n                                                <option key={tour.id} value={tour.id}>{tour.name}</option>\r\n                                            ))}\r\n                                        </select>\r\n                                    ) : (\r\n                                        item.Tour.name\r\n                                    )}\r\n                                </td>\r\n                                <td>\r\n                                    {editingId === item.id ? (\r\n                                        <>\r\n                                            <button onClick={() => handleUpdate(item.id)}>Обновить</button>\r\n                                            <button onClick={handleCancelEdit}>Отменить</button>\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <button onClick={() => handleEdit(item.id, { id: item.id, numberOfDays: item.numberOfDays, tourId: item.tourId, userId: item.userId })}>Изменить</button>\r\n                                            <button onClick={() => handleDelete(item.id)}>Удалить</button>\r\n                                        </>\r\n                                    )}\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BookingsTable;","import React, { useEffect, useState,useContext } from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport { AuthContext } from \"../helpers/AuthContext\";\r\n\r\nfunction AddBooking() {\r\n    const [tours, setTours] = useState([]);\r\n    const { authState } = useContext(AuthContext);\r\n    let history = useHistory();\r\n    const initialValues = {\r\n        tourId: 1,\r\n        numberOfDays: 1\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!localStorage.getItem(\"accessToken\")) {\r\n            history.push(\"/login\");\r\n        }\r\n        axios.get(\"https://course-project-75u9.onrender.com/tours/\", {\r\n            headers: { accessToken: localStorage.getItem(\"accessToken\") },\r\n        }).then((response) => {\r\n            console.log(response.data)\r\n            setTours(response.data);\r\n        });\r\n    }, []);\r\n    const validationSchema = Yup.object().shape({\r\n        tourId: Yup.number().required(\"Required\"),\r\n        numberOfDays: Yup.number().required(\"Required\").min(1, \"Минимальное значение – 1.\"),\r\n    });\r\n\r\n    const onSubmit = (data) => {\r\n        const newData = {\r\n            userId: authState.id,\r\n            tourId: data.tourId,\r\n            numberOfDays: data.numberOfDays\r\n        }\r\n        axios\r\n            .post(\"https://course-project-75u9.onrender.com/bookings\", newData, {\r\n                headers: { accessToken: localStorage.getItem(\"accessToken\") },\r\n            })\r\n            .then((response) => {\r\n                if (response.status === 200) {\r\n                    Swal.fire({\r\n                        icon: \"success\",\r\n                        title: \"Успех\",\r\n                        text: \"Покупка совершена успешно\",\r\n                    }).then(() => {\r\n                        history.push(\"/\");\r\n                    });\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                const errorMessage = error.response.data.error;\r\n                console.log(error)\r\n                if (error.response.status === 400) {\r\n                    Swal.fire({\r\n                        icon: \"error\",\r\n                        title: \"Ошибка\",\r\n                        text: errorMessage,\r\n                    });\r\n                } else if (error.response.status === 409) {\r\n                    Swal.fire({\r\n                        icon: \"error\",\r\n                        title: \"Ошибка\",\r\n                        text: errorMessage,\r\n                    });\r\n                }\r\n                else if (error.response.status === 404) {\r\n                    Swal.fire({\r\n                        icon: \"error\",\r\n                        title: \"Ошибка\",\r\n                        text: errorMessage,\r\n                    });\r\n                } else {\r\n                    Swal.fire({\r\n                        icon: \"error\",\r\n                        title: \"Ошибка\",\r\n                        text: \"Не удалось совершить покупку\",\r\n                    });\r\n                }\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"createPostPage\">\r\n            <Formik\r\n                initialValues={initialValues}\r\n                onSubmit={onSubmit}\r\n                validationSchema={validationSchema}\r\n            >\r\n                <Form className=\"formContainer\">\r\n                    <ErrorMessage name=\"tourId\" component=\"span\" />\r\n                    <Field as=\"select\" name=\"tourId\">\r\n                    <option value=\"\">Выберите тур</option>\r\n                        {tours.map((tour) => (\r\n                            <option key={tour.id} value={tour.id}>\r\n                                {tour.name}\r\n                            </option>\r\n                        ))}\r\n                    </Field>\r\n                    <label>Количество дней: </label>\r\n                    <ErrorMessage name=\"priceOneDay\" component=\"span\" />\r\n                    <Field\r\n                        type=\"number\"\r\n                        id=\"inputCreatePost\"\r\n                        name=\"numberOfDays\"\r\n                        placeholder=\"100\"\r\n                    />\r\n                    <button type=\"submit\"> Купить тур</button>\r\n                </Form>\r\n            </Formik>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddBooking;","import React, { useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Swal from 'sweetalert2';\r\nimport { AuthContext } from \"../helpers/AuthContext\";\r\n\r\nconst UsersTable = () => {\r\n    const [listOfUsers, setListOfUsers] = useState([]);\r\n    const [editingId, setEditingId] = useState(null);\r\n    const [updatedValues, setUpdatedValues] = useState({});\r\n    const { authState } = useContext(AuthContext);\r\n\r\n    let history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (!localStorage.getItem(\"accessToken\")) {\r\n            console.log(localStorage.getItem(\"accessToken\"))\r\n            history.push(\"/login\");\r\n        } else {\r\n            fetchData()\r\n        }\r\n    }, []);\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            axios\r\n                .get(\"https://course-project-75u9.onrender.com/auth/\", {\r\n                    headers: { accessToken: localStorage.getItem(\"accessToken\") }\r\n                })\r\n                .then((response) => {\r\n                    console.log(response.data.error != undefined)\r\n                    if (response.data.error != undefined) {\r\n                        history.push(\"/login\");\r\n                    }\r\n                    else {\r\n                        setListOfUsers(response.data);\r\n                    }\r\n                });\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    const handleCancelEdit = () => {\r\n        setEditingId(null);\r\n        setUpdatedValues({});\r\n    };\r\n\r\n\r\n    const handleUpdate = async (id) => {\r\n        const fieldsUpdated = Object.keys(updatedValues).length > 0;\r\n\r\n        if (!fieldsUpdated) {\r\n            Swal.fire({\r\n                icon: \"info\",\r\n                title: \"Нет обновления\",\r\n                text: \"Вы не сделали никаких обновлений.\",\r\n            });\r\n            return;\r\n        }\r\n        try {\r\n            await axios.put(`https://course-project-75u9.onrender.com/auth/${id}`, updatedValues, {\r\n                headers: { accessToken: localStorage.getItem(\"accessToken\") }\r\n            });\r\n            Swal.fire({\r\n                icon: \"success\",\r\n                title: \"Успех\",\r\n                text: \"Пользователь успешно обновлен\",\r\n              });\r\n            setEditingId(null); // Завершение режима редактирования\r\n            fetchData(); // Обновление данных после обновления\r\n        } catch (error) {\r\n            console.error(error);\r\n            let errorMessage = \"Не удалось обновить пользователя\";\r\n\r\n            if (error.response && error.response.status === 400) {\r\n                errorMessage = \"Отсутствующие параметры\";\r\n            } else if (error.response && error.response.status === 404) {\r\n                errorMessage = \"Пользователь не найден\";\r\n            } else if (error.response && error.response.status === 409) {\r\n                errorMessage = \"Имя пользователя уже используется\";\r\n            } else if (error.response && error.response.data && error.response.data.error) {\r\n                errorMessage = error.response.data.error;\r\n            }\r\n\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Ошибка',\r\n                text: errorMessage,\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleDelete = async (id) => {\r\n        try {\r\n          const response = await axios.delete(`https://course-project-75u9.onrender.com/auth/${id}`, {\r\n            headers: { accessToken: localStorage.getItem(\"accessToken\") },\r\n          });\r\n      \r\n          if (response.data.message === \"Пользователь успешно удален\") {\r\n            Swal.fire({\r\n              icon: \"success\",\r\n              title: \"Успех\",\r\n              text: \"Пользователь успешно удален\",\r\n            });\r\n            fetchData(); // Обновление данных после удаления\r\n          } else {\r\n            Swal.fire({\r\n              icon: \"error\",\r\n              title: \"Ошибка\",\r\n              text: \"Не удалось удалить пользователя\",\r\n            });\r\n          }\r\n        } catch (error) {\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"Ошибка\",\r\n            text: \"Не удалось удалить пользователя\",\r\n          });\r\n          console.error(error);\r\n        }\r\n      };\r\n\r\n    return (\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>ID</th>\r\n                    <th>Имя пользователя</th>\r\n                    <th>Действия</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {listOfUsers.map((item) => (\r\n                    <tr key={item.id}>\r\n                        <td>{item.id}</td>\r\n                        <td>{item.username}</td>\r\n                        <td>\r\n                            {editingId === item.id ? (\r\n                                <>\r\n                                    <button onClick={() => handleUpdate(item.id)}>Обновить</button>\r\n                                    <button onClick={handleCancelEdit}>Отменить</button>\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    <button onClick={() => handleDelete(item.id)}>Удалить</button>\r\n                                </>\r\n                            )}\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n\r\nexport default UsersTable;","import React, { useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Swal from 'sweetalert2';\r\nimport { AuthContext } from \"../helpers/AuthContext\";\r\n\r\nconst HotelsTable = () => {\r\n    const [listOfHotels, setListOfHotels] = useState([]);\r\n    const [editingId, setEditingId] = useState(null);\r\n    const [updatedValues, setUpdatedValues] = useState({});\r\n    const [originalValues, setOriginalValues] = useState({});\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const { authState } = useContext(AuthContext);\r\n\r\n    let history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (!localStorage.getItem(\"accessToken\")) {\r\n            console.log(localStorage.getItem(\"accessToken\"))\r\n            history.push(\"/login\");\r\n        } else {\r\n            fetchData()\r\n        }\r\n    }, []);\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            axios\r\n                .get(\"https://course-project-75u9.onrender.com/hotels\", {\r\n                    headers: { accessToken: localStorage.getItem(\"accessToken\") }\r\n                })\r\n                .then((response) => {\r\n                    console.log(response.data.error != undefined)\r\n                    if (response.data.error != undefined) {\r\n                        history.push(\"/login\");\r\n                    }\r\n                    else {\r\n                        console.log(response.data)\r\n                        setListOfHotels(response.data);\r\n                    }\r\n                });\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    const handleEdit = (id, values) => {\r\n        setEditingId(id);\r\n        setUpdatedValues(values);\r\n        setOriginalValues(values);\r\n    };\r\n\r\n    const handleCancelEdit = () => {\r\n        setEditingId(null);\r\n        setUpdatedValues({});\r\n    };\r\n\r\n\r\n    const handleUpdate = async (id) => {\r\n        const fieldsUpdated = Object.keys(updatedValues).length > 0;\r\n\r\n        if (!fieldsUpdated) {\r\n            Swal.fire({\r\n                icon: \"info\",\r\n                title: \"Нет обновления\",\r\n                text: \"Вы не сделали никаких обновлений.\",\r\n            });\r\n            return;\r\n        }\r\n        try {\r\n            await axios.put(`https://course-project-75u9.onrender.com/hotels/edit/${id}`, updatedValues, {\r\n                headers: { accessToken: localStorage.getItem(\"accessToken\") }\r\n            });\r\n            Swal.fire({\r\n                icon: \"success\",\r\n                title: \"Успех\",\r\n                text: \"Отель успешно обновлен\",\r\n            });\r\n            setEditingId(null); // Завершение режима редактирования\r\n            fetchData(); // Обновление данных после обновления\r\n        } catch (error) {\r\n            console.error(error);\r\n            let errorMessage = \"Не удалось обновить отель.\";\r\n\r\n            if (error.response && error.response.status === 400) {\r\n                errorMessage = \"Отсутствующие параметры\";\r\n            } else if (error.response && error.response.status === 404) {\r\n                errorMessage = \"Отель не найден\";\r\n            } else if (error.response && error.response.status === 409) {\r\n                errorMessage = \"Название отеля уже занято\";\r\n            } else if (error.response && error.response.data && error.response.data.error) {\r\n                errorMessage = error.response.data.error;\r\n            }\r\n\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Ошибка',\r\n                text: errorMessage,\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleInputChange = (e, id) => {\r\n        const { name, value } = e.target;\r\n        if (name === 'name' && value.trim() === '') {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Ошибка',\r\n                text: 'Имя не может быть пустым',\r\n            });\r\n            return;\r\n        }\r\n        if (name === 'city' && value.trim() === '') {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Ошибка',\r\n                text: 'Город не может быть пустым',\r\n            });\r\n            return;\r\n        }\r\n        if (name === \"starRating\") {\r\n            if (value < 0 || isNaN(value)) {\r\n                // Вывод алерта при вводе недопустимого значения\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Ошибка',\r\n                    text: 'Значение должно быть неотрицательным числом',\r\n                });\r\n                return;\r\n            }\r\n        }\r\n\r\n        setUpdatedValues({ ...updatedValues, [name]: value });\r\n    };\r\n\r\n    const handleDelete = async (id) => {\r\n        try {\r\n            const response = await axios.delete(`https://course-project-75u9.onrender.com/hotels/${id}`, {\r\n                headers: { accessToken: localStorage.getItem(\"accessToken\") },\r\n            });\r\n\r\n            if (response.status === 200) {\r\n                Swal.fire({\r\n                    icon: \"success\",\r\n                    title: \"Успех\",\r\n                    text: \"Отель успешно удален\",\r\n                });\r\n                fetchData();\r\n            } else {\r\n                Swal.fire({\r\n                    icon: \"error\",\r\n                    title: \"Ошибка\",\r\n                    text: \"Не удалось удалить отель\",\r\n                });\r\n            }\r\n        } catch (error) {\r\n            Swal.fire({\r\n                icon: \"error\",\r\n                title: \"Ошибка\",\r\n                text: \"Не удалось удалить отель\",\r\n            });\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {listOfHotels === null ? (\r\n                <p>Нет доступных отелей.</p>\r\n            ) : (\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Имя</th>\r\n                            <th>Звезды</th>\r\n                            <th>Город</th>\r\n                            <th>Действия</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {listOfHotels.map((item) => (\r\n                            <tr key={item.id}>\r\n                                <td>{item.id}</td>\r\n                                <td>\r\n                                    {editingId === item.id ? (\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"name\"\r\n                                            value={updatedValues.name || item.name}\r\n                                            onChange={(e) => handleInputChange(e, item.id)}\r\n                                        />\r\n                                    ) : (\r\n                                        item.name\r\n                                    )}\r\n                                </td>\r\n                                <td>\r\n                                    {editingId === item.id ? (\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            name=\"starRating\"\r\n                                            min={1}\r\n                                            max={5}\r\n                                            value={updatedValues.starRating || item.starRating}\r\n                                            onChange={(e) => handleInputChange(e, item.id)}\r\n                                        />\r\n                                    ) : (\r\n                                        item.starRating\r\n                                    )}\r\n                                </td>\r\n                                <td>\r\n                                    {editingId === item.id ? (\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"city\"\r\n                                            value={updatedValues.city || item.city}\r\n                                            onChange={(e) => handleInputChange(e, item.id)}\r\n                                        />\r\n                                    ) : (\r\n                                        item.city\r\n                                    )}\r\n                                </td>\r\n                                <td>\r\n                                    {editingId === item.id ? (\r\n                                        <>\r\n                                            <button onClick={() => handleUpdate(item.id)}>Обновить</button>\r\n                                            <button onClick={handleCancelEdit}>Отменить</button>\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <button onClick={() => handleEdit(item.id, { id: item.id, name: item.name, starRating: item.starRating, city: item.city })}>Изменить</button>\r\n                                            <button onClick={() => handleDelete(item.id)}>Удалить</button>\r\n                                        </>\r\n                                    )}\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HotelsTable;","import React, { useState } from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nfunction Registration() {\r\n  let history = useHistory();\r\n\r\n  const initialValues = {\r\n    username: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    username: Yup.string()\r\n    .min(3, 'Имя пользователя должно быть не менее 3 символов')\r\n    .max(15, 'Имя пользователя должно быть не более 15 символов')\r\n    .required('Имя пользователя является обязательным полем'),\r\n    password: Yup.string()\r\n    .min(4, 'Пароль должен быть не менее 4 символов')\r\n    .max(20, 'Пароль должен быть не более 20 символов')\r\n    .required('Пароль является обязательным полем'),\r\n  });\r\n\r\n  const onSubmit = (data) => {\r\n    axios.post(\"https://course-project-75u9.onrender.com/auth\", data)\r\n      .then((response) => {\r\n        // Обработка успешного ответа\r\n        console.log(\"Registration successful\");\r\n        history.push('/login');\r\n      })\r\n      .catch(error => {\r\n        if (error.response && error.response.status === 409) {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Пользователь уже создан',\r\n            confirmButtonColor: '#fe6401',\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Произошла непредвиденная ошибка',\r\n            text: error.message,\r\n            confirmButtonColor: '#fe6401',\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"registr-page\">\r\n      <Formik\r\n        initialValues={initialValues}\r\n        onSubmit={onSubmit}\r\n        validationSchema={validationSchema}\r\n      >\r\n        <Form className=\"formContainer\">\r\n          <h1>Регистрация</h1>\r\n          <label>Имя пользователя: </label>\r\n          <ErrorMessage name=\"username\" component=\"span\" />\r\n          <Field\r\n            autoComplete=\"off\"\r\n            id=\"inputCreatePost\"\r\n            name=\"username\"\r\n            placeholder=\"(alexxx111)\"\r\n          />\r\n\r\n          <label>Пароль: </label>\r\n          <ErrorMessage name=\"password\" component=\"span\" />\r\n          <Field\r\n            autoComplete=\"off\"\r\n            type=\"password\"\r\n            id=\"inputCreatePost\"\r\n            name=\"password\"\r\n            placeholder=\"пароль\"\r\n          />\r\n\r\n          <button type=\"submit\">Зарегистрироваться</button>\r\n        </Form>\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Registration;\r\n","import React, { useState, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Formik, Form} from \"formik\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../helpers/AuthContext\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nfunction Login() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const { setAuthState } = useContext(AuthContext);\r\n\r\n  let history = useHistory();\r\n\r\n  const login = () => {\r\n    const data = { username: username, password: password };\r\n    axios.post(\"https://course-project-75u9.onrender.com/auth/login\", data)\r\n      .then((response) => {\r\n        localStorage.setItem(\"accessToken\", response.data.token);\r\n        localStorage.setItem(\"isAdmin\", response.data.isAdmin);\r\n        setAuthState({\r\n          username: response.data.username,\r\n          id: response.data.id,\r\n          status: true,\r\n          isAdmin: response.data.isAdmin\r\n        });\r\n        history.push(\"/\");\r\n      })\r\n      .catch(error => {\r\n        if (error.response && error.response.status === 409) {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Пользователь уже создан',\r\n            confirmButtonColor: '#fe6401',\r\n          });\r\n        } else if (error.response && error.response.status === 401) {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Неверная комбинация имени пользователя и пароля',\r\n            confirmButtonColor: '#fe6401',\r\n          });\r\n        } else if (error.response && error.response.status === 404) {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Пользователь не существует',\r\n            confirmButtonColor: '#fe6401',\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Произошла непредвиденная ошибка',\r\n            text: error.message,\r\n            confirmButtonColor: '#fe6401',\r\n          });\r\n        }\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"loginContainer\">\r\n      <Formik>\r\n      <Form className=\"formContainer\">\r\n      <h1>Авторизация</h1>\r\n      <label>Имя пользователя:</label>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Введите имя\"\r\n        onChange={(event) => {\r\n          setUsername(event.target.value);\r\n        }}\r\n      />\r\n      <label>Пароль:</label>\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Введите пароль\"\r\n        onChange={(event) => {\r\n          setPassword(event.target.value);\r\n        }}\r\n      />\r\n      <button onClick={login}> Авторизоваться </button>\r\n      </Form>\r\n    </Formik>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction PageNotFound() {\r\n  const history = useHistory();\r\n    const [counter, setCounter] = useState(5);\r\n\r\n    useEffect(() => {\r\n        const timer =\r\n            counter > 0 &&\r\n            setTimeout(() => {\r\n                setCounter(counter - 1);\r\n            }, 1000);\r\n\r\n        if (counter === 0) {\r\n            history.push('/');\r\n        }\r\n\r\n        return () => clearTimeout(timer);\r\n    }, [counter, history]);\r\n    return (\r\n        <div>\r\n            <h1>Страница не найдена</h1>\r\n            <p>Вы будете перенаправлены через {counter} секунд.</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PageNotFound;\r\n","import React from \"react\";\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction PageForAdmin() {\r\n    const history = useHistory();\r\n    const [counter, setCounter] = useState(5);\r\n\r\n    useEffect(() => {\r\n        const timer =\r\n            counter > 0 &&\r\n            setTimeout(() => {\r\n                setCounter(counter - 1);\r\n            }, 1000);\r\n\r\n        if (counter === 0) {\r\n            history.push('/');\r\n        }\r\n\r\n        return () => clearTimeout(timer);\r\n    }, [counter, history]);\r\n    return (\r\n        <div>\r\n            <h1>Вам не разрешено посещать эту страницу</h1>\r\n            <p>Вы будете перенаправлены через {counter} секунд.</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PageForAdmin;","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { AuthContext } from \"../helpers/AuthContext\";\r\nimport Swal from 'sweetalert2';\r\nimport { Formik, Form } from \"formik\";\r\n\r\nfunction Profile() {\r\n  let { id } = useParams();\r\n  let history = useHistory();\r\n  const [listOfBookings, setListOfBookings] = useState([]);\r\n  const [username, setUsername] = useState(\"\");\r\n  const { authState } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    if (!localStorage.getItem(\"accessToken\")) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      fetchData()\r\n    }\r\n  }, []);\r\n\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      axios.get(`https://course-project-75u9.onrender.com/auth/basicinfo/${id}`, {\r\n        headers: {\r\n          accessToken: localStorage.getItem(\"accessToken\"),\r\n        },\r\n      })\r\n        .then((response) => {\r\n          if (response.data == null) {\r\n            setUsername(null);\r\n          } else {\r\n            setUsername(response.data.username);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n      axios.get(`https://course-project-75u9.onrender.com/bookings/byUserId/${id}`, {\r\n        headers: {\r\n          accessToken: localStorage.getItem(\"accessToken\"),\r\n        },\r\n      })\r\n        .then((response) => {\r\n          if (response.data == null) {\r\n            setListOfBookings(null);\r\n          } else {\r\n            console.log(response.data)\r\n            setListOfBookings(response.data);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      const response = await axios.delete(`https://course-project-75u9.onrender.com/bookings/${id}`, {\r\n        headers: { accessToken: localStorage.getItem(\"accessToken\") },\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        Swal.fire({\r\n          icon: \"success\",\r\n          title: \"Успех\",\r\n          text: \"Бронирование отменено\",\r\n        });\r\n        fetchData();\r\n      } else {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Ошибка\",\r\n          text: \"Не удалось отменить бронирование\",\r\n        });\r\n      }\r\n    } catch (error) {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Ошибка\",\r\n        text: \"Не удалось отменить бронирование\",\r\n      });\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"profilePageContainer1\">\r\n      {username != null ? (<div className=\"profilePageContainer\">\r\n        <div className=\"basicInfo\">\r\n          {\" \"}\r\n            <div className=\"formContainer\">\r\n              <h1> Имя пользователя: {username} </h1>\r\n              {authState.username === username && (\r\n                <>\r\n                  <button\r\n                    onClick={() => {\r\n                      history.push(\"/changepassword\");\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    Изменить пароль\r\n                  </button>\r\n                  <div>\r\n                    {listOfBookings.length == 0 ? (\r\n                      <p>Нет бронирований</p>\r\n                    ) : (\r\n                      <table>\r\n                        <thead>\r\n                          <tr>\r\n                            <th>ID</th>\r\n                            <th>Количество дней</th>\r\n                            <th>Тур</th>\r\n                            <th>Отель</th>\r\n                            <th>Действия</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {listOfBookings.map((item) => (\r\n                            <tr key={item.id}>\r\n                              <td>{item.id}</td>\r\n                              <td>\r\n                                {item.numberOfDays}\r\n                              </td>\r\n                              <td>\r\n                                {item.Tour.name}\r\n                              </td>\r\n                              <td>\r\n                                {item.Tour.Hotel.name}\r\n                              </td>\r\n                              <td>\r\n                                <button onClick={() => handleDelete(item.id)}>Отменить бронирование</button>\r\n                              </td>\r\n                            </tr>\r\n                          ))}\r\n                        </tbody>\r\n                      </table>\r\n                    )}\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n        </div>\r\n      </div>\r\n      )\r\n        :\r\n        (\r\n          <h2>Нет такого пользователя</h2>\r\n        )\r\n      }\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import React, { useState } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Formik, Form} from \"formik\";\r\n\r\nfunction ChangePassword() {\r\n  const [oldPassword, setOldPassword] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  let history = useHistory();\r\n\r\n  const changePassword = () => {\r\n    axios.put(\r\n      \"https://course-project-75u9.onrender.com/auth/changepassword\",\r\n      {\r\n        oldPassword: oldPassword,\r\n        newPassword: newPassword,\r\n      },\r\n      {\r\n        headers: {\r\n          accessToken: localStorage.getItem(\"accessToken\"),\r\n        },\r\n      }\r\n    )\r\n      .then((response) => {\r\n        history.push(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        if (error.response) {\r\n          const errorMessage = error.response.data.error;\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Ошибка',\r\n            text: errorMessage,\r\n            confirmButtonColor: '#fe6401',\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Произошла непредвиденная ошибка',\r\n            text: error.message,\r\n            confirmButtonColor: '#fe6401',\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"ChangePassword-page\">\r\n      <Formik>\r\n        <Form className=\"formContainer\">\r\n      <h1>Изменить свой пароль</h1>\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Старый пароль\"\r\n        onChange={(event) => {\r\n          setOldPassword(event.target.value);\r\n        }}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Новый пароль\"\r\n        onChange={(event) => {\r\n          setNewPassword(event.target.value);\r\n        }}\r\n      />\r\n      <button onClick={changePassword}> Сохранить изменения </button>\r\n      </Form>\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChangePassword;\r\n","import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { AuthContext } from \"../helpers/AuthContext\";\r\n\r\nconst ENDPOINT = 'https://course-project-75u9.onrender.com';\r\n\r\nfunction Chat() {\r\n  const [message, setMessage] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const socketRef = useRef();\r\n  const messagesRef = useRef(null);\r\n  const { authState } = useContext(AuthContext);\r\n\r\n  const scrollToBottom = () => {\r\n    if (messagesRef.current) {\r\n      messagesRef.current.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"accessToken\");\r\n\r\n    scrollToBottom();\r\n    socketRef.current = io(ENDPOINT, {\r\n      transports: ['websocket'],\r\n      auth: { token }\r\n    });\r\n\r\n    socketRef.current.on('allMessages', (messages) => {\r\n      console.log(token)\r\n      setMessages(messages);\r\n    });\r\n\r\n    socketRef.current.on('newMessage', (message) => {\r\n      console.log(token)\r\n      setMessages((prevMessages) => [...prevMessages, message]);\r\n      scrollToBottom();\r\n    });\r\n\r\n    return () => {\r\n      socketRef.current.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (message.trim() !== '') {\r\n      socketRef.current.emit('newMessage', { text: message, author: authState.username });\r\n      scrollToBottom();\r\n      setMessage('');\r\n    } else {\r\n      alert('u cant input 0')\r\n      setMessage('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ height: '500px',width:'400px', overflowY: 'scroll' }}>\r\n        {messages.map((message, index) => (\r\n          <div key={index} style={{ wordWrap: 'break-word',wordBreak: 'break-word',whiteSpace: 'pre-wrap' }}>\r\n            {message.author}:{message.text}\r\n          </div>\r\n        ))}\r\n        <div ref={messagesRef} />\r\n      </div>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type your message\"\r\n          value={message}\r\n          onChange={(event) => {\r\n            const inputValue = event.target.value;\r\n            if (inputValue.length <= 150) {\r\n              setMessage(inputValue);\r\n            }\r\n          }}\r\n        />\r\n        <button type=\"submit\"> Отправить </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Chat;","import \"./App.css\";\r\nimport Swal from \"sweetalert2\";\r\nimport { BrowserRouter as Router, withRouter, Redirect, useHistory, Route, Switch, Link } from \"react-router-dom\";\r\nimport Home from \"./pages/Home\";\r\n// import AddCity from \"./pages/AddCity\";\r\nimport AddTour from \"./pages/AddTour\";\r\nimport AddHotel from \"./pages/AddHotel\";\r\n// import CitiesTable from \"./pages/CitiesTable\";\r\nimport ToursTable from \"./pages/ToursTable\";\r\nimport Tours from \"./pages/Tours\";\r\nimport Hotels from \"./pages/Hotels\";\r\nimport BookingsTable from \"./pages/BookingsTable\";\r\nimport AddBooking from \"./pages/AddBooking\";\r\nimport UsersTable from \"./pages/UsersTable\";\r\nimport HotelsTable from \"./pages/HotelsTable\";\r\nimport Registration from \"./pages/Registration\";\r\nimport Login from \"./pages/Login\";\r\nimport PageNotFound from \"./pages/PageNotFound\";\r\nimport PageForAdmin from \"./pages/PageForAdmin\";\r\nimport Profile from \"./pages/Profile\";\r\nimport ChangePassword from \"./pages/ChangePassword\";\r\n\r\nimport { AuthContext } from \"./helpers/AuthContext\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Chat from \"./pages/Chat\";\r\n\r\nfunction App() {\r\n  let isAuthenticated = localStorage.getItem(\"accessToken\") != null\r\n  const AuthRoute = ({ component: Component, ...rest }) => {\r\n    isAuthenticated = localStorage.getItem(\"accessToken\") != null\r\n    console.log('isauth')\r\n    console.log(isAuthenticated)\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={(props) =>\r\n          isAuthenticated ? <Redirect to=\"/\" /> : <Component {...props} />\r\n        }\r\n      />\r\n    );\r\n  };\r\n  const PrivateRoute = ({ component: Component, ...rest }) => {\r\n    isAuthenticated = localStorage.getItem(\"accessToken\") != null\r\n    console.log('statea auth')\r\n    console.log(isAuthenticated)\r\n    if (!isAuthenticated) {\r\n      setAuthState({ ...authState, status: false });\r\n    }\r\n\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={(props) =>\r\n          isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n        }\r\n      />\r\n    );\r\n  };\r\n\r\n  const AdminRoute = ({ component: Component, isAdmin, ...rest }) => {\r\n    const isAuthenticated = localStorage.getItem(\"accessToken\") !== null;\r\n    isAdmin = localStorage.getItem(\"isAdmin\")\r\n    console.log(localStorage.getItem(\"isAdmin\"))\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={(props) =>\r\n          isAuthenticated && authState.isAdmin ? (\r\n            <Component {...props} />\r\n          ) : (\r\n            <PageForAdmin />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  };\r\n\r\n\r\n  const RegistrationWithRouter = withRouter(Registration);\r\n  const LoginWithRouter = withRouter(Login);\r\n  const ChatWithRouter = withRouter(Chat);\r\n  const HomeWithRouter = withRouter(Home);\r\n  const AddHotelWithRouter = withRouter(AddHotel);\r\n  const AddBookingWithRouter = withRouter(AddBooking);\r\n  const AddTourWithRouter = withRouter(AddTour);\r\n  const UsersTableWithRouter = withRouter(UsersTable);\r\n  const BookingsTableWithRouter = withRouter(BookingsTable);\r\n  const ToursTableWithRouter = withRouter(ToursTable);\r\n  const HotelsTableWithRouter = withRouter(HotelsTable);\r\n  const ToursWithRouter = withRouter(Tours);\r\n  const HotelsWithRouter = withRouter(Hotels);\r\n  const ProfileWithRouter = withRouter(Profile);\r\n  const ChangePasswordWithRouter = withRouter(ChangePassword);\r\n\r\n  const [authState, setAuthState] = useState({\r\n    username: \"\",\r\n    id: 0,\r\n    status: false,\r\n    isAdmin: localStorage.getItem(\"isAdmin\")\r\n  });\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://course-project-75u9.onrender.com/auth/auth\", {\r\n        headers: {\r\n          accessToken: localStorage.getItem(\"accessToken\"),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data)\r\n        if (response.data.error) {\r\n          localStorage.removeItem(\"accessToken\");\r\n          setAuthState({ ...authState, status: false });\r\n  \r\n          if (response.data.error == 'jwt expired') {\r\n            Swal.fire({\r\n              icon: 'warning',\r\n              title: 'Сессия истекла!',\r\n              text: 'Пожалуйста, войдите снова',\r\n            }).then(() => {\r\n              window.location.replace(\"/login\");\r\n            });\r\n          } else {\r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Упс',\r\n              text: response.data.error,\r\n            });\r\n          }\r\n        } else {\r\n          setAuthState({\r\n            username: response.data.username,\r\n            id: response.data.id,\r\n            status: true,\r\n            isAdmin: response.data.isAdmin\r\n          });\r\n        }\r\n      }).catch((error) => {\r\n        localStorage.removeItem(\"accessToken\");\r\n        console.log(error);\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Упс',\r\n          text: error.message,\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"accessToken\");\r\n    localStorage.removeItem(\"isAdmin\");\r\n    setAuthState({ username: \"\", id: 0, status: false });\r\n    window.location.replace(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <AuthContext.Provider value={{ authState, setAuthState }}>\r\n        <Router>\r\n          <div className=\"navbar\">\r\n            <div className=\"links\">\r\n              {!authState.status ? (\r\n                <>\r\n                  <Link to=\"/login\"> Авторизация </Link>\r\n                  <Link to=\"/registration\"> Регистрация </Link>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Link to=\"/\"> Домашняя страница </Link>\r\n                  <Link to=\"/addbooking\"> Добавить бронирование</Link>\r\n                  <Link to=\"/tours\"> Все туры</Link>\r\n                  <Link to=\"/hotels\"> Все отели</Link>\r\n                  {authState.isAdmin && (\r\n                    <>\r\n                      <Link to=\"/userstable\"> Таблица пользователей </Link>\r\n                      <Link to=\"/hotelstable\"> Таблица отелей</Link>\r\n                      <Link to=\"/bookingstable\"> Таблица заказов</Link>\r\n                      <Link to=\"/tourstable\">   Таблица туров </Link>\r\n                      <Link to=\"/addhotel\"> Добавить отель</Link>\r\n                      <Link to=\"/addbooking\"> Добавить бронирование</Link>\r\n                      <Link to=\"/addtour\"> Добавить тур</Link>\r\n                    </>\r\n                  )}\r\n                </>\r\n              )}\r\n            </div>\r\n            <div className=\"loggedInContainer\">\r\n              <h1><Link to={\"/profile/\" + authState.id}>{authState.username}</Link></h1>\r\n              {authState.status && <button onClick={logout}> Выйти </button>}\r\n            </div>\r\n          </div>\r\n          <Switch>\r\n            <AuthRoute path=\"/registration\" exact component={RegistrationWithRouter} />\r\n            <AuthRoute path=\"/login\" exact component={LoginWithRouter} />\r\n            <PrivateRoute path=\"/\" exact component={HomeWithRouter} />\r\n            <PrivateRoute path=\"/chat\" exact component={ChatWithRouter} />\r\n            <PrivateRoute path=\"/addbooking\" exact component={AddBookingWithRouter} />\r\n            <PrivateRoute path=\"/tours\" exact component={ToursWithRouter} />\r\n            <PrivateRoute path=\"/hotels\" exact component={HotelsWithRouter} />\r\n            <AdminRoute path=\"/userstable\" exact component={UsersTableWithRouter} />\r\n            <AdminRoute path=\"/hotelstable\" exact component={HotelsTableWithRouter} />\r\n            <AdminRoute path=\"/tourstable\" exact component={ToursTableWithRouter} />\r\n            <AdminRoute path=\"/bookingstable\" exact component={BookingsTableWithRouter} />\r\n            {/* <AdminRoute path=\"/addcity\" exact component={AddCityWithRouter} /> */}\r\n            <AdminRoute path=\"/addhotel\" exact component={AddHotelWithRouter} />\r\n            {/* <AdminRoute path=\"/citiestable\" exact component={CitiesTableWithRouter} /> */}\r\n            <AdminRoute path=\"/addtour\" exact component={AddTourWithRouter} />\r\n            <PrivateRoute path=\"/profile/:id\" exact component={ProfileWithRouter} />\r\n            <PrivateRoute path=\"/changepassword\" exact component={ChangePasswordWithRouter} />\r\n            <Route path=\"*\" exact component={PageNotFound} />\r\n          </Switch>\r\n        </Router>\r\n      </AuthContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}